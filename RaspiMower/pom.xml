<?xml version="1.0" encoding="UTF-8"?>
<project
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>hns.erse</groupId>
    <artifactId>hns-pi4j</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>HNS Pi4J</name>

    <properties>
        <!-- Project Properties -->
        <crowpi.launcher.class>hns.erse/hns.erse.Launcher</crowpi.launcher.class>
        <crowpi.launcher.args/>

        <!-- CrowPi Remote Deployment -->
        <crowpi.remote.host/>
        <crowpi.remote.port>22</crowpi.remote.port>
        <crowpi.remote.username>pi</crowpi.remote.username>
        <crowpi.remote.password>koeln4711</crowpi.remote.password>
        <crowpi.remote.target>/home/pi/deploy</crowpi.remote.target>
        <crowpi.remote.jvmOptions/>

        <!-- Project Dependencies -->
        <java.version>11</java.version>
        <pi4j.version>2.0</pi4j.version>
        <slf4j.version>1.7.32</slf4j.version>
        <picocli.version>4.6.1</picocli.version>
        <junit.version>5.7.1</junit.version>

        <!-- Maven Dependencies -->
        <maven-antrun-plugin.version>3.0.0</maven-antrun-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-dependency-plugin.version>3.1.2</maven-dependency-plugin.version>
        <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
        <maven-javadoc-plugin.version>3.2.0</maven-javadoc-plugin.version>
        <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
        <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>

        <!-- Maven Properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <!-- Ant Dependencies -->
        <ant-jsch.version>1.10.9</ant-jsch.version>
    </properties>

    <dependencies>
        <!-- Pi4J Core -->
        <dependency>
            <groupId>com.pi4j</groupId>
            <artifactId>pi4j-core</artifactId>
            <version>${pi4j.version}</version>
        </dependency>

        <!-- Pi4J Raspberry Pi Platform -->
        <dependency>
            <groupId>com.pi4j</groupId>
            <artifactId>pi4j-plugin-raspberrypi</artifactId>
            <version>${pi4j.version}</version>
        </dependency>

        <!-- Pi4J Raspberry Pi GPIO -->
        <dependency>
            <groupId>com.pi4j</groupId>
            <artifactId>pi4j-plugin-pigpio</artifactId>
            <version>${pi4j.version}</version>
        </dependency>

        <!-- Pi4J Mock Platform -->
        <dependency>
            <groupId>com.pi4j</groupId>
            <artifactId>pi4j-plugin-mock</artifactId>
            <version>${pi4j.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- PicoCLI -->
        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli</artifactId>
            <version>${picocli.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fazecast</groupId>
            <artifactId>jSerialComm</artifactId>
            <version>[2.0.0,3.0.0)</version>
        </dependency>

        <dependency>
            <groupId>org.jline</groupId>
            <artifactId>jline</artifactId>
            <version>3.9.0</version>
        </dependency>

        <dependency>
            <groupId>org.ejml</groupId>
            <artifactId>ejml-simple</artifactId>
            <version>0.41</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/ext_libraries/ejml-simple-0.41.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>org.ejml</groupId>
            <artifactId>ejml-core</artifactId>
            <version>0.41</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/ext_libraries/ejml-core-0.41.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>org.ejml</groupId>
            <artifactId>ejml-ddense</artifactId>
            <version>0.41</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/ext_libraries/ejml-ddense-0.41.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>org.ejml</groupId>
            <artifactId>ejml-dsparse</artifactId>
            <version>0.41</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/ext_libraries/ejml-dsparse-0.41.jar</systemPath>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>3.0.0-M1</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <id>ddense</id>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <groupId>org.ejml</groupId>
                            <artifactId>ejml-ddense</artifactId>
                            <version>0.41</version>
                            <packaging>jar</packaging>
                            <file>${project.basedir}/ext_libraries/ejml-ddense-0.41.jar</file>
                        </configuration>
                    </execution>
                    <execution>
                        <phase>initialize</phase>
                        <id>dsparse</id>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <groupId>org.ejml</groupId>
                            <artifactId>ejml-dsparse</artifactId>
                            <version>0.41</version>
                            <packaging>jar</packaging>
                            <file>${project.basedir}/ext_libraries/ejml-dsparse-0.41.jar</file>
                        </configuration>
                    </execution>
                    <execution>
                        <phase>initialize</phase>
                        <id>core</id>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <groupId>org.ejml</groupId>
                            <artifactId>ejml-core</artifactId>
                            <version>0.41</version>
                            <packaging>jar</packaging>
                            <file>${project.basedir}/ext_libraries/ejml-core-0.41.jar</file>
                        </configuration>
                    </execution>
                    <execution>
                        <phase>initialize</phase>
                        <id>simple</id>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <groupId>org.ejml</groupId>
                            <artifactId>ejml-simple</artifactId>
                            <version>0.41</version>
                            <packaging>jar</packaging>
                            <file>${project.basedir}/ext_libraries/ejml-simple-0.41.jar</file>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- Specify compiler options -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <release>${java.version}</release>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                    <verbose>false</verbose>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>info.picocli</groupId>
                            <artifactId>picocli-codegen</artifactId>
                            <version>${picocli.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <!-- Used by PicoCLI annotation processor -->
                        <arg>-Aproject=${project.groupId}/${project.artifactId}</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <!-- Copy runtime dependencies into distribution folder -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies-runtime</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/distribution</outputDirectory>
                            <includeScope>runtime</includeScope>
                            <excludeTransitive>false</excludeTransitive>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-dependencies-system</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/distribution</outputDirectory>
                            <includeScope>system</includeScope>
                            <excludeTransitive>false</excludeTransitive>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Build final JAR file -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <outputDirectory>${project.build.directory}/distribution</outputDirectory>
                </configuration>
            </plugin>

            <!-- Javadoc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <additionalOptions>
                        <additionalOption>--module-path</additionalOption>
                        <additionalOption>${project.build.directory}/distribution</additionalOption>
                    </additionalOptions>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven-antrun-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <!-- Run the JAR file locally -->
        <profile>
            <id>local-run</id>
            <activation>
                <property>
                    <name>!crowpi.remote.host</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <executable>sudo</executable>
                            <commandlineArgs>java --module-path ${project.build.directory}/distribution --module ${crowpi.launcher.class} ${crowpi.launcher.args}</commandlineArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Transfer and run JAR with dependencies on remote CrowPi -->
        <profile>
            <id>remote-run</id>
            <activation>
                <property>
                    <name>crowpi.remote.host</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>transfer</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <!-- Ensure target directory exists on CrowPi -->
                                        <sshexec host="${crowpi.remote.host}" port="${crowpi.remote.port}"
                                                 username="${crowpi.remote.username}" password="${crowpi.remote.password}"
                                                 trust="true" command="mkdir --parents ${crowpi.remote.target}"/>

                                        <!-- Transfer distribution folder to CrowPi via SCP -->
                                        <scp trust="true"
                                             todir="${crowpi.remote.username}:${crowpi.remote.password}@${crowpi.remote.host}:${crowpi.remote.target}"
                                             port="${crowpi.remote.port}">
                                            <fileset dir="${project.build.directory}/distribution"/>
                                        </scp>

                                        <!-- Run application on Raspberry Pi -->
                                        <sshexec host="${crowpi.remote.host}" port="${crowpi.remote.port}"
                                                 username="${crowpi.remote.username}" password="${crowpi.remote.password}" trust="true"
                                                 failonerror="false" usepty="true" useSystemIn="true"
                                                 command="sudo java ${crowpi.remote.jvmOptions} --module-path ${crowpi.remote.target} --module ${crowpi.launcher.class} ${crowpi.launcher.args}"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.ant</groupId>
                                <artifactId>ant-jsch</artifactId>
                                <version>${ant-jsch.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Activate JDWP server on CrowPi, can be used for local and remote runs -->
        <profile>
            <id>debug</id>
            <properties>
                <crowpi.remote.jvmOptions>
                    -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:5005
                </crowpi.remote.jvmOptions>
            </properties>
        </profile>
    </profiles>
</project>
